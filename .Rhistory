myvar=5
myvar2<-5 #varible declaration
vec1<-c("a","b","c")
vec2<-c("a",1,"c")
vec3 <- c(1,2,3)
vec4 <-c(FALSE,1,"3")
vec4 <-c(FALSE,1,"3") ##directly converts all character
matrix <- matrix(1:9,nrow=3,ncol=3)
matrix[1:2,2:3]
as.factor(sample("a","b","c"),9,replace=TRUE))
as.factor(sample(c("a","b","c"),9,replace=TRUE))
mydf <-data.frame(col1=1:3,col2=c("a","b","c"),col3=c(TRUE,FALSE,FALSE))
mylist <-list(1,vec4,matrix,mydf)
vec1+vec2
vec1*vec2
>?head
?head
## R round() function ile yuvarlamada tek sayıları yukarı yuvarlar tek sayıları asagı
set.seed(522)
## R round() function ile yuvarlamada tek sayıları yukarı yuvarlar tek sayıları asagı
set.seed(522)
sample(c("a","b","c"),9,replace=TRUE))
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
# Remove the temp file
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
# Remove the temp file
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
# Remove the temp file
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
library(tidyverse)
library(readxl)
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
tmp<-tempfile(fileext=".xlsx")
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
?download.file
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
install.packages(dd)
will undergo
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
#Insntal the package if you already haven't
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
# install.packages("devtools")
#devtools::install_github("tidyverse/readxl")
#install.packages("tidyverse", repos = "https://cran.r-project.org")
# Set your working directory (the directory which you keep
"library function takes package name as first argument. This name actually refers to the name passed as package argument
rather than any value associated to that name.
library function internally converts the package argument to a character literal (except when character.only is set to TRUE).
So,
plyr <- dplyr()
library(plyr)
will undergo
if(!character.only
package <- as.character(substitute(plyr))"
install.packages(dd)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
install.packages(dd)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
#Download Raw Data
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
install.packages(dd)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
install.packages(dd)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
tmp<-tempfile(fileext=".xlsx")
install.packages(dd)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
install.packages(dd)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
install.packages(dd)
tmp<-tempfile(fileext=".xlsx")
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
file.remove(tmp)
library(tidyverse)
library(readxl)
library(plyr)
library(tidyverse)
library(readxl)
raw_data <- raw_data %>% slice(-c(48,49))
raw_data <- raw_data %>% slice(-c(48,49))
raw_data <- raw_data %>% slice(-c(48,49))
head(raw_data)
head(raw_data)
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
head(raw_data)
raw_data <- raw_data %>% slice(-c(48,49))
head(raw_data)
```{r pressure}
head(raw_data)
colnames(raw_data) <- c("MARKA","oto_yerli","oto_ithal","oto_toplam","ticari_yerli","ticari_ithal","ticari_toplam","toplam_yerli","toplam_ithal","toplam_toplam")
# Now we replace NA values with 0 and label the time period with year and month, so when we merge the data we won't be confused.
car_data_oct_16<- raw_data %>% mutate_if(is.numeric,funs(ifelse(is.na(.),0,.))) %>% mutate(year=2016,month=10)
print(car_data_oct_16,width=Inf)
saveRDS(car_data_oct_16, file = "car_data_oct_16.rds")
car_data_oct_16 %>%
filter(oto_toplam > 0 & ticari_toplam > 0) %>%
select(MARKA,toplam_toplam) %>
library(tidyverse)
library(readxl)
car_data_oct_16 %>%
filter(oto_toplam > 0 & ticari_toplam > 0) %>%
select(MARKA,toplam_toplam) %>%
arrange(desc(toplam_toplam))
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
library(plyr)
library(tidyverse)
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
# Load the package to the session
library(tidyverse)
library(readxl)
##library(plyr)
#install.packages("magrittr") library(magrittr)
#dd <- "plyr"
#install.packages(dd)
#Download Raw Data
# Create a temporary file
tmp<-tempfile(fileext=".xlsx")
# Download file from repository to the temp file
download.file("https://github.com/MEF-BDA503/pj18-Leyla.Yigit/blob/master/FILES/odd_retail_sales_2016_10.xlsx?raw=true",mode="wb",destfile=tmp)
# Read that excel file using readxl package's read_excel function. You might need to adjust the parameters (skip, col_names) according to your raw file's format.
raw_data<-readxl::read_excel(tmp,skip=7,col_names=FALSE)
# Remove the temp file
file.remove(tmp)
plot(pressure)
raw_data <- raw_data %>% slice(-c(48,49))
head(raw_data)
#In order to make the data standardized and workable we need to define column names and remove NA values for this example.
#Please use the same column names in your examples also.
# Use the same column names in your data.
colnames(raw_data) <- c("MARKA","oto_yerli","oto_ithal","oto_toplam","ticari_yerli","ticari_ithal","ticari_toplam","toplam_yerli","toplam_ithal","toplam_toplam")
# Now we replace NA values with 0 and label the time period with year and month, so when we merge the data we won't be confused.
car_data_oct_16<- raw_data %>% mutate_if(is.numeric,funs(ifelse(is.na(.),0,.))) %>% mutate(year=2016,month=10)
print(car_data_oct_16,width=Inf)
#One of the best methods is to save your data to an RDS or RData file.
#The difference is RDS can hold only one object but RData can hold many. Since we have only one data frame here we will go with RDS.
# Save an object to a file
saveRDS(car_data_oct_16, file = "car_data_oct_16.rds")
car_data_oct_16 %>%
filter(oto_toplam > 0 & ticari_toplam > 0) %>%
select(MARKA,toplam_toplam) %>%
arrange(desc(toplam_toplam))
library(plyr)
dd <- "plyr"
install.packages(dd)
install.packages(dd)
# Load the package to the session
library(tidyverse)
library(readxl)
library(plyr)
#install.packages("magrittr") library(magrittr)
dd <- "plyr"
install.packages(dd)
install.packages(dd)
install.packages("plyr") library(plyr)
install.packages(plyr) library(plyr)
install.packages("plyr")
library(plyr)
library(plyr)
```{r car_data_oct_16}
car_data_oct_16 %>%
summarise(sales_num_mean=mean(toplam_toplam),dom_sales_num_maen=mean(toplam_yerli),imp_sales_num_mean=mean(toplam_ithal),com_sales_num_mean=mean(ticari_ithal),oto_sales_num_mean=mean(oto_ithal))
library(tidyverse)
library(readxl)
car_data_oct_16 %>%
summarise(sales_num_mean=mean(toplam_toplam),dom_sales_num_maen=mean(toplam_yerli),imp_sales_num_mean=mean(toplam_ithal),com_sales_num_mean=mean(ticari_ithal),oto_sales_num_mean=mean(oto_ithal))
car_data_oct_16 %>%
filter(MARKA=='VOLKSWAGEN' ) %>%
select(MARKA,(toplam_toplam),(toplam_yerli)  ,(toplam_ithal))%>%
arrange (desc(sum(toplam_toplam)))
car_data_oct_16 %>%
filter(toplam_toplam==0) %>%
select(MARKA,toplam_toplam) %>%
arrange( MARKA)
car_data_oct_16 %>%
group_by(MARKA) %>%
filter(sum(toplam_toplam)>2000) %>%
select(MARKA,toplam_ithal,toplam_yerli,toplam_toplam) %>%
arrange(desc(toplam_toplam))
```{r mutate}
```{r mutate}
car_data_oct_16_comp <-
car_data_oct_16 %>%
# group_by(MARKA)%>%
#aggregate( by=list(toplam_yerli,toplam_ithal,toplam_toplam), FUN=sum)
summarise(dip_toplam=sum(toplam_toplam),ticari_toplam=sum(ticari_toplam),oto_toplam=sum(oto_toplam))
#mutate(dip_toplam = sum(toplam_toplam))
car_data_oct_16_type
car_data_oct_16_comp
